;; Adapted from Norvig, Paradigms of Artificial Intelligence
;; Programming, p. 36 (MIT License):
(defn append (a b)
  (cond ((not a) b)
        (t (cons (car a)
                 (append (cdr a) b)))))

(defn reverse (l)
  (cond ((not l) ())
        (t (append (reverse (cdr l))
                   (cons (car l) ())))))

(defn one-of (l) (list (randchoice l)))

(defn Noun () (one-of '(man ball woman table)))
(defn Verb () (one-of '(hit took saw liked)))
(defn Article () (one-of '(the a)))
(defn noun-phrase () (append (Article) (Noun)))
(defn verb-phrase () (append (Verb) (noun-phrase)))
(defn sentence () (append (noun-phrase) (verb-phrase)))

(defn proper-sentence ()
  (let ((s (sentence)))
    (let ((first (capitalize (car s)))
          (last (period (car (reverse s)))))
      (cons first
            (reverse (cons last
                           (cdr (reverse (cdr s)))))))))

(defn dotimes (n f)
  (cond ((zero? n) ())
        (t (let () (f) (dotimes (- n 1) f)))))

(dotimes 10 (lambda ()
              (printl (proper-sentence))))
;;=>
;; A ball saw a ball.
;; The ball took a table.
;; The woman took the man.
;; A table hit the table.
;; A woman liked a man.
;; The woman saw a woman.
;; A table took a woman.
;; The ball saw the woman.
;; The man hit the man.
;; A man liked the table.

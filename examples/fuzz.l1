
(defn in? (x l)
  (cond ((not l) ())
        ((= (car l) x) t)
        (t (in? x (cdr l)))))

;; Try these operators to POC the approach:
;; (def operators '(+ - * / list cons concat))

;; Remove operators that muddle the test:
(def operators (remove (lambda (x)
                         (in? x '(loop
                                  with-screen
                                  screen-start
                                  readlist)))
                       (forms)))

(defn genint (n)
  (lambda ()
    (randint n)))

(defn randargs ()
  (map (lambda (_) ((arg))) (range (randint 10))))

(defn arg ()
  (randchoice (list (constantly t)
                    (constantly ())
                    randargs
                    (genint 10)
                    (genint 100)
                    (genint 1000))))

(defn randlist ()
  (repeatedly (randint 10) (arg)))

(defn expr ()
  (cons (randchoice operators)
        (randargs)))

(dotimes 10000
  (let ((e (expr)))
    (println e)
    (println (swallow (eval e)))))
